
/*  VISUAL */
.visual {
  margin-top: 120px;
  /* header의 높이값. */
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
  /* 정 가운데 하나만 넣겠다 */
}
.visual .inner {
  height: 646px;
  /* COMMON부분에 inner클래스를 이미 공통되게 지정해준 것이있다. */
}
.visual .title {
  position: absolute;
  /* 부모요소를 기준으로 배치하겠다. */
  top: 88px;
  left: -10px;
} 
.visual .title .btn {
  position: absolute;
  /* absolute는 구조상의 부모요소를 기준으로 배치되는데 그 부모요소에 position값이 적용되어 있어야지 
  정상적으로 작동하고 .visual .title 에는 position 값이 적용되어 있어 그대로 놔두면 된다.*/
  top: 259px;
  left: 173px;
}
/* 버튼을 title부분과 묶어놨기 때문에 타이틀이 이동하면 버튼도 따라서 제 위치에 맞게 이동하기 때문에 
전체적인 구조를 묶음묶음으로 정하고 짜는 것도 좋은 방법이다. */
.visual .cup1.image { 
  /* class="cup1 image" 라고 쓰여있는 경우 일치 선택자를 사용하여 표시한다.*/
  position: absolute;
  bottom: 0;
  right: -47px;
}
.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}
.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}
.visual .cup2.text {
  position: absolute;
  top: 321px;
  right: 416px;
}
.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
.visual .fade-in {
  opacity: 0;
  /* 안보이게 미리 만들어 놓고 그것을 순차적으로 보이도록 작업할 것이다. */
}

/* NOTICE */
.notice .notice-line {
  position: relative;
  /* height속성은 auto, 너비값은 최대한 줄어들려고 하는 성격 */
}
.notice .notice-line .bg-left {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333;
}
.notice .notice-line .bg-right {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
}
.notice .notice-line .inner {
  height: 62px;
  /* inner의 부모요소에 높이값이 별도로 없기때문에 inner의 자체값이 높이 값으로 들어간다. */
  /* bg-left, right의 높이가 100%로 맞춰져 있기에 이것들의 높이도 200px을 따라간다. */
  display: flex;
  /* inner-left, right부분이 수평이되어야하니 flex */
  z-index: 1;
}
.notice .notice-line .inner__left {
  width: 60%;
  height: 100%;
  background-color: #333;
  display: flex;
  /* align-item 의 기본값은 stratch 로 최대한 늘어나려고 하는 성격 지닌다. */
  align-items: center;
  /* 수직정렬하는 align-items의 기본값은 stratch */
}
.notice .notice-line .inner__left h2 {
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}
.notice .notice-line .inner__left .swiper-container {
  height: 62px;
  flex-grow: 1;
  /* display: flex를 부여했을 때 그 안에 아이템의 높이 값이 별도로 없으면 최대한 늘어나려는 특징을 지닌다. */
  /* flex-grow는 최대한 늘어나라는 뜻 */
}
.notice .notice-line .inner__left .swiper-slide {
  height: 62px;
  display: flex;
  align-items: center;
  /* 수직정렬 */
}
.notice .notice-line .inner__left .swiper-slide a {
  color: #fff;
}
.notice .notice-line .inner__left .notice-line__more {
  width: 62px;
  height: 62px;
  display: flex;
  /* 아이콘 가운데 정렬 */
  justify-content: center;
  /* 수평가운데 */
  align-items: center;
  /* 수직가운데 */
}
.notice .notice-line .inner__left .notice-line__more .material-icons {
  color: #fff;
  font-size: 30px;
  /* 아이콘의 기본크기는 24px */
}
.notice .notice-line .inner__right {
  width: 40%;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  /* 수평정렬을 오른쪽 끝으로 이동 */
  align-items: center;
  /* 수직정렬, 수직가운데 정렬*/
}
.notice .notice-line .inner__right h2 {
 font-size: 17px;
 font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
  width: 62px;
  height: 62px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}
.notice .promotion {
  height: 693px;
  background-color: #f6f5ef;
  position: relative;
  transition: height .4s;
  /* transition: 속성명 지속시간 타이밍함수 대기시간; */
  overflow: hidden;
  /* 요소의 크기가 줄어들면서 그 영역밖으로 내용이 넘치지 않을 것이다. */
}
.notice .promotion.hide {
  /* .hide는 일치선택자로써의 기능을 하고 있다.  */
  height: 0;
}
.notice .promotion .swiper-container {
  width: calc(819px * 3 + 20px);
  /* 칼크 함수라고 불리우는 calc는 자체적으로 계산을 맏기는 형식이다. 다른 단위끼리의 계산도 가능하다*/
  /* width: calc(100% - 50px); */
  height: 553px;

  /* 컨텐츠를 정가운데에 위치시켜야 할때 */
  position: absolute;
  top: 40px; 
  /* promotion이라는 특정한 영역을 기준으로 해서 위에서 40px지점에 위치시키겠다 */
  left: 50%;
  margin-left: calc((819px * 3 + 20px) / -2);
}
.notice .promotion .swiper-slide {
  opacity: .5;
  /* transition: opacity 1s; */
  position: relative;
}
.notice .promotion .swiper-slide-active {
  opacity: 1;
}
.notice .promotion .swiper-slide .btn {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  /* 왼쪽과 오른쪽의 끝점을 잡아주고 margin: auto를 통해서 가운데 배치될 수 있는 구조를 잡아준다.*/
  margin: auto;
  /* margin:auto 의 경우 요소의 가로 너비가 있어야 브라우져가 여백을 자동으로 계산해줄수 있다. 
  그런데 COMMON요소에서 이미 btn에 대해 가로너비를 주었다*/
}
.notice .promotion .swiper-pagination {
  bottom: 40px;
  left: 0;
  right: 0;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet {
  background-color: transparent;
  background-image: url("../images/promotion_slide_pager.png");
  width: 12px;
  height: 12px;
  margin-right: 6px;
  outline: none; 
  /* 있어도 없어도 상관없는거 같은데..? */
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child {
  margin-right: 0;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet-active {
  background-image: url("../images/promotion_slide_pager_on.png");
}
.notice .promotion .swiper-prev,
.notice .promotion .swiper-next {
  /* 위와 같은 방식을 다중 선택자 라고 한다.  */
  width: 42px;
  height: 42px;
  border: 2px solid #333;
  border-radius: 50%;
  position: absolute;
  top: 300px;
  /* 부모요소 기준으로 위에서 300px 떨어진 곳에 위치 */
  z-index: 1;
  /* 슬라이드 요소보다 더 위에 쌓이도록 */
  cursor: pointer;
  outline: none;
  /* swiperjs에서 이 요소를 포커스 해서, 밖에 파란선이 생기게 되는데 그것을 없애준다.  */
  display: flex;
  justify-content: center;
  align-items: center;
  transition: .4s;
  /* hover했을 때의 배경색이 변화하는 시간을 지정한 것인데, hover클래스 자체에 하지 않고 몸체에 효과를 
  직접적으로 집어넣는다. */
}
.notice .promotion .swiper-prev {
  left: 50%;
  margin-left: -480px;
}
.notice .promotion .swiper-next {
  right: 50%;
  margin-right: -480px;
}
.notice .promotion .swiper-prev:hover,
.notice .promotion .swiper-next:hover {
  background-color: #333;
  color: #fff;
}
/* REWARDS */
.rewards {
position: relative;
}
.rewards .bg-left {
  width: 50%;
  height: 100%;
  /* 높이값을 100% 를 쓰네?? */
  background-color: #272727;
  position: absolute;
  top: 0;
  left: 0;
}
.rewards .bg-right {
  width: 50%;
  height: 100%;
  background-color: #d5c798;
  position: absolute;
  top: 0;
  right: 0;
}
.rewards .inner {
  background-image: url("../images/rewards.jpg");
  height: 241px;
  /* 전역속성으로 inner부분에는 posiiton값이 들어가있는 상태이다 */
}
.rewards .btn-group {
  position: absolute;
  bottom: 24px;
  /* 밑에서부터 24px 지점 */
  right: 0;
  /* 오른쪽에 붙이겠다는 의미 */
  width: 250px;
  display: flex;
  flex-wrap: wrap;
  /* 수평을 만들건데 가로 너비 250px보다 더 내용이 넘칠 것 같으면 줄 바꿈을 허용하겠다*/
}
.rewards .btn-group .btn.sign-up {
  margin-right: 10px;
}
.rewards .btn-group .btn.sign-in {
  width: 110px;
  /* 전역속성으로 btn의 속성을 위에서 지정해줬었는데, 그 값을 조금 수정해주었다 */
}
.rewards .btn-group .btn.gift {
  margin-top: 10px;
  /* 위쪽 버튼이랑 거리를 두자 */
  flex-grow: 1;
  /* 최대한의 너비를 쓸수 있도록 늘어나라는, 증가너비의 비율 */
}

/* YOUTUBE VIDEO */
.youtube {
  position: relative;
  height: 700px;
  background-color: #333;
  overflow: hidden;
}
.youtube .youtube__area {
  width: 1920px;
  background-color: orange;
  position: absolute;
  left: 50%;
  /* 왼쪽으로부터 50% 만큼 밀린것이다. */
  margin-left: calc(1920px / -2);
  /* 음수의 값이 나와야 왼쪽으로 이동하기 때문에 음수값-2 사용하였다 */
  top: 50%;
  margin-top: calc(1920px * 9 / 16 / -2);
  /* 가로너비 1920px를 기준으로 세로너비가 16대 9 비율로 들어갔다. 그리고 -2값이 들어가야 절반만큼 위로 끌어올릴 수 있다. */
}
.youtube .youtube__area::before {
  /* html에 직접 요소를 추가하지 않고 style 작업에 필요한 요소는 최대한 css로 처리하도록 한다.  */
  content: "";
  display: block;
  width: 100%;
  height: 0;
  padding-top: 56.25%;
  /* 16:9비율의 영상을 출력하기위해서 내부의 위쪽 여백을 추가했다 */
}
.youtube .youtube__cover {
  background-image: url("../images/video_cover_pattern.png");
  background-color: rgba(0,0,0,.3);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
#player {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.youtybe .inner {
  height: 700px;
  background-color: royalblue;
}
.youtube .floating1 {
  position: absolute;
  top: 50px;
  left: 0;
}
.youtube .floating2 {
  position: absolute;
  top: 350px;
  left: 150px;
}

/* SEASON PRODUCT */
.season-product {
 background-image: url("../images/season_product_bg.jpg");
}
.season-product .inner {
  height: 400px;
}
.season-product .floating3 {
  position: absolute;
  top: -200px;
  right: 0;
}
.season-product .text-group {
  position: absolute;
  top: 110px;
  right: 100px;
}
.season-product .text-group .title {
  margin-bottom: 10px;
}
.season-product .text-group .description {
  margin-bottom: 15px;
}
.season-product .text-group .more {

}

/* RESERVE COFFEE */
.reserve-coffee {
  background-image: url("../images/reserve_bg.jpg");
}
.reserve-coffee .inner {
  height: 400px;
}
.reserve-coffee .reserve-logo {
  position: absolute;
  top: 110px;
  left: 0;
}
.reserve-coffee .text-group {
  position: absolute;
  top: 124px;
  left: 208px
}
.reserve-coffee .product {
  position: absolute;
  top: 0;
  right: 0;
}

/* PICK YOUR FAVORITE */
.pick-your-favorite {
  background-image: url("../images/favorite_bg.jpg");
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
  /* 다른 요소들이 스크롤 될 때 배경은 뷰포트에 고정이 되서 움직이지 않는다.  */
  background-size: cover;
  /* 배경이미지를 요소의 더 넓은 너비에 맞추어서 출력*/
}
.pick-your-favorite .inner {
  padding: 110px 0;
} 
.pick-your-favorite .text-group {
  margin-left: 100px;
  width: 362px;
  display: flex;
  flex-wrap: wrap;
  /* 줄바꿈이 가능한 형태로 바꾼다 */
  justify-content: flex-end;
}
.pick-your-favorite .text-group .tilte {
  margin-bottom: 40px;
}
.pick-your-favorite .text-group .description {
  margin-bottom: 40px;
}
.pick-your-favorite .text-group .more {
  /* btn부분 밖에는 특별하게 없기 때문에 필요없는 부분이다. */
}

/* RESERVE STORE */
.reserve-store {
  background-image: url("../images/reserve_store_bg.jpg");
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
  background-size: cover;
  /* 배경의 크기를 더 넓은 너비에 맞춰서 출력 */
}
.reserve-store .inner {
  height: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.reserve-store .medal {
  width: 334px;
  height: 334px;
  /* 가로 너비가 최대한 늘어나려고하기 때문에 정확한 크기를 지정해 주지않으면 같은 수평선 상에 다른 공간을 hover해도 변환하는 모습이 나타난다.  */
  perspective: 600px;
}
.reserve-store .medal .front,
.reserve-store .medal .back {
  width: 334px;
  height: 334px;
  position: absolute;
  backface-visibility: hidden;
  transition: 1s;
}
.reserve-store .medal .front {
  transform: rotateY(0deg);
  /* 명시적으로 작성만 해준 것이다. 구형 버전같은경우 이렇게 적어주지 않으면 동작을 안할 때도 있기 때문이다.  */
}
.reserve-store .medal:hover .front {
  transform: rotateY(180deg);
}
.reserve-store .medal .back {
  transform: rotateY(-180deg);
  /* hover하지 않았을 때 이미 뒤에 돌아가져 있는 상태인것이다. */
}
.reserve-store .medal:hover .back {
  transform: rotateY(0deg);
  /* 이미 돌아가져 있는 이미지가 원 상태로 돌아오도록 만든다.  */
}
.reserve-store .medal .back .btn {
  position: absolute;
  top: 240px;
  left: 0;
  right: 0;
  margin: auto;
  /* 위 방식을 통해서 가운데 배치를 하려면 가로너비가 있어야 하는데 .btn의 가로 너비가 
  이미 지정되어 있음으로 따로 입력하지 않는다. */
}

/* FIND STORE */
.find-store {
  background-image: url("../images/find_store_bg.jpg");
}
.find-store .inner {
  height: 400px;
}
.find-store .texture1 {
  position: absolute;
  top: 0;
  left: 400px;
  /* .inner부분은 이미 position: relative 되어있다. */
}
.find-store .texture2 {
  position: absolute;
  bottom: 0;
  right: 0;

}
.find-store .picture {
  border-radius: 50%;
  box-shadow: 2px 2px 8px rgba(0,0,0,.5);
  /* x축 y축 블러처리 불투명도*/
  position: absolute;
}
.find-store .picture1 {
  top: -60px;
  left: 0;
}
.find-store .picture2 {
  top: 150px;
  left: 250;
}
.find-store .text-group {
  position: absolute;
  top: 120px;
  left: 550px;
}
.find-store .text-group .title {
  margin-bottom: 20px;
}
.find-store .text-group .description {
  margin-bottom: 20px;
}

/* AWARDS */
.awards {
  background-color: #272727;
}
.awards .inner {
  padding: 40px 0;
}
.awards .swiper-container {
  width: 100%;
  height: 40px;
}
.awards .swiper-prev,
.awards .swiper-next {
  width: 42px;
  height: 42px;
  border: 2px solid #fff;
  border-radius: 50%;
  outline: none;
  color: #fff;
  opacity: .3;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;  
  /* 가운데 배치는 꼭 확인해야될 것이 하나 있는데, 요소의 너비이다. 너비가 꼭 들아가 있어야지만 margin: auto가 가능하다.  */
}
.awards .swiper-prev {
  left: -100px;
}
.awards .swiper-next {
  right: -100px;
}
.awards .swiper-prev:hover,
.awards .swiper-next:hover {
  background-color: #fff;
  color: #333;
}

#to-top {
  width: 42px;
  height: 42px;
  background-color: #333;
  color: #fff;
  border: 2px solid #fff;
  border-radius: 10px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 9;
}