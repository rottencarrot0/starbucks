/* COMMON 프로젝트에 공통적으로 영향을 미치는 효과 */
body {
  color: #333;
  font-size: 16px;
  font-weight: 400;
  /* 글자의 두께는 기본적으로 100~900까지 9단계가 있는데 그중에서 일반적인 사이즈 400으로
  하겠다고 명시 */
  line-height: 1.4;
  /*사용하는 글꼴에 따라서 최적의 줄 높이가 다르니 주의하자*/
  font-family: 'Nanum Gothic', sans-serif;
  /* height: 3000px; */
}
img {
  display: block;
  /*이미지 요소는 인라인 요소이지만 이제부터는 화면을 구성하는 레이아웃으로 활용하겠다는
  의미로 block으로 넣어준다.*/
}
a {
  text-decoration: none;
}
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  /* 두꺼운 굵기로 만들어줄거야 */
  text-align: center;
  /* 문자의 정렬을 가운데로 해줄거야 */
  cursor: pointer;
  box-sizing: border-box;
  /* padding과 margin이 들어간 만큼 요소가 커지지 않도록 하겠다 */
  display: block;
  /* 혹시라도 <a>나 <span>부분에 btn이라는 클래스를 부여했을 때도 정상적으로 버튼의 모양이 나올 수 있도록 한다.*/
  transition: .4s;
  /* 배경색, 글자색 같은 것들을 바꿔줄 건데 보다 자연스럽게 보이도록 시간을 부여한다. */
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}
.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
}
.btn.btn--brown:hover {
  color: #fff;
  background-color: #592b18;
}
.btn.btn--gold {
  color: #d9aaba;
  border-color: #d9aaba;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #D9AABA;
}
.btn.btn--white {
  color: #fff;
  border-color: #fff;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}
.back-to-position {
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  /* 왼쪽에서 오른쪽으로 나타나는 애니매이션 */
  transform: translateX(-150px);
  /* 왼쪽으로 이동이 된 상태에서, 원래의 상태로 돌아온다면 왼쪽에서 오른쪽으로 움직이는 모습이된다. */
}
.back-to-position.to-left {
  transform: translateX(150px);
  /* 오른쪽으로 이동이 된 상태가 만들어지고, 원래의 상태로 돌아갈때 오른쪽에서 왼쪽으로 이동하는 모습이된다.  */
}
.show .back-to-position {
  /* .back-to-position 이라는 클래스가 .show 라는 클래스의 후손이라면, 아래와 같은 속성들이 적용될 것이고 
  translateX(0)으로 다시 옮겨지게 될 것이다.  */
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: .3s;
}
.show .back-to-position.delay-2 {
  transition-delay: .6s;
}
.show .back-to-position.delay-3 {
  transition-delay: .9s;
}
/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  /* 브라우저의 뷰포트를 기준으로 배치를 하겠다. */
  /* 일반적으로 블럭요소를 가로 너비가 최대한 늘어나려고 하는 특성을 지니고 있는데.
  position: absolute 와 fixed 는 가로 너비가 최소한으로 줄어들려고 하는 특징을 지니고 있다.
  그래서 지금 header 안에 width: 100% 를 넣어주었다.*/
  top: 0;
  z-index: 9;
  /* 배지가 visual section 부분에 가려저 안보여서 z-index를 넣어주었다.*/
}
header > .inner {
  /* header의 바로 자식요소인 inner만 적용하는 특성이라고 표시해준다. */
  height: 120px;
  /* width: 1100px;
  margin: 0 auto;
  중앙정렬이 가능하게 만든다.
  position: relative; 
  inner의 공통되는 요소들을 COMMON요소 쪽으로 뺏다 */

  /* header안에는 높이값이 따로 없어서 최대한 작아져있는 모습이고 inner의 높이가120px로 header는 곧 120px */
}

header .logo {
  height: 75px;
  /* 로고의 기본 높이값 */
  position: absolute;
  /* absolute 위치를 부모요소를 기준으로 하겠다 */
  top: 0;
  bottom: 0;
  left: 0;
  /* inner의 왼쪽에 붙어있다를 명시 */
  margin: auto;
}    
header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
  /* 자식요소들을 가로로 정렬시키기위해 */
}
header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
}
header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";
  /* content속성이 들어가 있지 않으면 가상요소 선택자가 아예 작동하지 않는다. */
  display: block;
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  /* absolute를 통해서 자동으로 display값이 block으로 바뀌기 때문에 
  위에 적혀있는 display: block;은 삭제해도 된다. 
  대표적으로 position: absolute와 fixed는 display가 block으로 바뀐다. */
  top: 0;
  bottom: 0;
  margin: auto 0;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}
header .sub-menu .search {
  height: 34px;
  position: relative;
  /* 자식요소의 position:absolute 를 실행시키기위해*/
}
header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  /* 전환효과 전환될 속성을 넣을 때 기본값은 all
  다음 지속시간*/
  transition: width .4s;
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  /* 돋보기 모양에 대한 스타일을 추가 */
  height: 24px;
  position: absolute;
  /* 부모요소를 기준으로 배치를 하겠다. */
  top: 0;
  bottom: 0;
  /* 배치할 기준을 위쪽과 아래쪽에 정확하게 0지점으로 맞춰준다. */
  right: 5px;
  margin: auto;
  transition: all .3s;
  /* focused 될시 전환효과 */
}
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}
header .main-menu {
  position: absolute;
  /* 위치상의 부모요소 기준으로 배치되도록 하자 */
  bottom: 0;
  right: 0;
  z-index: 1;
  /* 드롭다운쪽 배찌 부분이 잘 덮힐 수 있도록 갑을 지정한 것이다. */
  display: flex;
  
}
header .main-menu .item {

}
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
header .main-menu .item:hover .item__name {
/* item__contents부분에도 hover가 영향이 가서 나와야하기 때문에 hover는 .item부분에 바로 붙여준다. */
  background-color: #2c2a29;
  color: #669900;
  /* 속성 color 지정은 글씨 색 지정이다. */
  border-radius: 6px 6px 0 0;
  /* 좌상 우상 우하 좌하 */
}
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  /* 뷰포트를 기준으로 배치하겠다. */
  left: 0;
  /* top이나bottom 속성을 사용하지 않아 수직 위치 값이 없다면, 
  요소의 원래 위치를 그대로 사용한다.
  만약 position: absolute를 사용했다면 (위치상)부모 요소를 기준으로 하므로 
  화면의 뷰포트 좌우 끝까지 늘어날 수 없게 됩니다.  */
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  /* 높이값이 따로 지정되어있지 않아 안에 내용물 만큼 높이를 차지하게 된다. */
}
header .main-menu .item .item__contents .contents__menu > ul {
  /* 바로 자식에 해당하는 ul태그만 적용시킨다. */
  display: flex;
  /* 수평 정렬 가능하도록 flex */
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul {
 /* 안쓰는 선택자 삭제~~ */
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  /* 기본적으로 글자와 관련된 내용을 상속되기 때문에 자식요소에 하나하나 적어줄 필요는 없다. */
  background-image: url("../images/main_menu_pattern.jpg");
  /* 이미지가 반복되어 적용되고 있다. */
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
  /* 글자의 두께 */
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}
header .badges {
  position: absolute;
  /* 부모요소를 기준으로 배치할거다. 부모요소에 position값이 있는지 확인하자 */
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  /* 요소의 아래 바깥여백을 12px씩 줘서 간격을 추가 */
  box-shadow: 4px 4px 10px rgba(0,0,0,.15);
  cursor: pointer;
}

/* footer */
footer {
  background-color: #272727;
  border-top: 1px soild #333;
  /* Awards부분과 구분선을 만들어줄것이다. */
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
}
footer .menu li {
  position: relative;
}
footer .menu li::before {
  /* 가상요소 선택자, 인라인 요소*/
  content: "";
  /* content 라는 속성이 꼭 있어야 한다. */
  width: 3px;
  height: 3px;
  background-color: #555;
  position: absolute;
  /* position: absolute, fixed 자체는 display를 block으로 자동으로 바꿔준다.  */
  /* 부모요소에 position값만 적용되어 있으면 된다.  */
  top: 0;
  bottom: 0;
  right: -1px; 
  /* ??? 왜ㅐ*/
  margin: auto;
}
footer .menu li:last-child::before {
  /* 나는 이게 왜 before인지 모르겠다..  */
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  display: block;
  /* 사용자가 a요소를 클릭할 수 있는 범위를 늘려주기 위함이다.  */
}
footer .menu li a.green {
  color: #669900;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;

}
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  text-align: center;
}
footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  margin: 30px auto 0;
}